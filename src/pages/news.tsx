import { InferGetStaticPropsType } from "next";
import Head from "next/head";
import Image from "next/image";
import React, { ReactElement } from "react";
import styled from "styled-components";
import { Layout } from "../components/Layout";

const News = ({ news }: InferGetStaticPropsType<typeof getStaticProps>) => {
  return (
    <>
      <Head>
        <title>News</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/numberAlog.png" />
      </Head>
      <Style>
        <div className="body">
          <p className="title">News</p>
          <ul className="container">
            {news?.contents.map((props, index) => (
              <li key={index} className="item">
                <div className="image">
                  <Image
                    alt="img"
                    src={props.image.url}
                    layout={"responsive"}
                    width={props.image.width}
                    height={props.image.height}
                    quality={100}
                  />
                </div>
                {props.name}
              </li>
            ))}
          </ul>
        </div>
      </Style>
    </>
  );
};

export default News;

News.getLayout = function getLayout(page: ReactElement) {
  return <Layout>{page}</Layout>;
};

const Style = styled.div`
  position: relative;
  z-index: 2;
  display: flex;
  flex-direction: column;
  align-items: center;
  background-color: transparent;

  .body {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 90vw;
    height: 300px;
    background-color: rgba(255, 255, 255, 0.9);
    margin: 20vh 0 10vh;
    padding: 40px 0 40px;
    border-radius: 20px;

    .title {
      font-size: 40px;
    }

    .container {
      margin: 30px 0 0;
      width: 100%;
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      /* grid-template-rows: 100px 100px; */
      gap: 10px;
      .item {
        display: flex;
        flex-direction: column;
        align-items: center;
        background-color: aliceblue;
        padding: 30px;

        .image {
          width: 200px;
        }
      }
    }
  }
`;

export const getStaticProps = async () => {
  const api = process.env.API_KEY;
  if (api === undefined)
    return {
      props: {
        news: null,
      },
    };

  const newsRes = await fetch(
    "https://number-a-coffee.microcms.io/api/v1/news",
    {
      headers: {
        "X-API-KEY": api,
      },
    }
  );

  const newsJson: News = await newsRes.json();

  return {
    props: {
      news: newsJson,
    },
  };
};

type News = {
  contents: [
    {
      id: string;
      createdAt: string;
      updatedAt: string;
      publishedAt: string;
      revisedAt: string;
      name: string;
      description: string;
      price: number;
      image: {
        url: string;
        height: number;
        width: number;
      };
      category: {
        id: string;
        createdAt: string;
        updatedAt: string;
        publishedAt: string;
        revisedAt: string;
        name: string;
      };
    }
  ];
  totalCount: number;
  offset: number;
  limit: number;
};
